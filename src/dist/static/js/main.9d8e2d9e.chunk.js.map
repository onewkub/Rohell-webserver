{"version":3,"sources":["components/action-list.tsx","pages/download.tsx","pages/home.tsx","lib/ragnnarok_api.ts","lib/httpRequest.ts","pages/register.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ActionList","handleOnClick","to","window","location","assign","className","placement","title","icon","HomeOutlined","shape","onClick","AuditOutlined","DownloadOutlined","Title","Typography","DownloadPage","id","style","fontSize","level","href","size","type","Homepage","ragnarokHttprequest","url","axiosInstance","this","axios","create","baseURL","timeout","defaults","headers","interceptors","request","use","config","error","response","header","common","key","value","methodName","get","data","post","put","delete","process","Option","Select","RegisterPage","useState","verify","setVerify","setToken","alreadyUse","setAlreadyUse","sucess","setSucess","Form","useForm","form","recaptcha","useGoogleReCaptcha","loading","setLoading","useEffect","a","executeRecaptcha","token","getVerify","handleOnFinish","values","res","console","log","status","resetFields","validateFields","justifyContent","display","alignItems","color","subTitle","extra","layout","onFinish","Item","name","label","rules","required","message","validator","Promise","reject","Error","resolve","onChange","placeholder","hasFeedback","pattern","Password","dependencies","getFieldValue","_","width","allowClear","block","disabled","marginTop","htmlType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","reCaptchaKey","useEnterprise","language","document","getElementById"],"mappings":"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","file":"static/js/main.9d8e2d9e.chunk.js","sourcesContent":["import './styles.less'\r\nimport { Button, Tooltip } from 'antd'\r\nimport {\r\n  HomeOutlined,\r\n  AuditOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons'\r\n\r\nfunction ActionList() {\r\n  const handleOnClick = (to: string) => {\r\n    window.location.assign(to)\r\n  }\r\n  return (\r\n    <div className=\"action-panel\">\r\n      <Tooltip placement=\"left\" title=\"Home\">\r\n        <Button\r\n          icon={<HomeOutlined />}\r\n          shape=\"circle\"\r\n          onClick={() => handleOnClick('#home')}\r\n        ></Button>\r\n      </Tooltip>\r\n      <Tooltip placement=\"left\" title=\"Register\">\r\n        <Button\r\n          icon={<AuditOutlined />}\r\n          shape=\"circle\"\r\n          onClick={() => handleOnClick('#register')}\r\n        ></Button>\r\n      </Tooltip>\r\n      <Tooltip placement=\"left\" title=\"Download\">\r\n        <Button\r\n          icon={<DownloadOutlined />}\r\n          shape=\"circle\"\r\n          onClick={() => handleOnClick('#download')}\r\n        ></Button>\r\n      </Tooltip>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionList\r\n","import { Button, Typography } from 'antd'\r\nimport { DownloadOutlined } from '@ant-design/icons'\r\nconst { Title } = Typography\r\nfunction DownloadPage() {\r\n  return (\r\n    <div className=\"download-content\" id=\"download\">\r\n      <h1 className=\"neonTitle\" style={{ fontSize: 46 }}>\r\n        Download\r\n      </h1>\r\n      <div className=\"download-box\">\r\n        <Title level={3}>ROHell.zip (2021-04-21)</Title>\r\n        <DownloadOutlined style={{ fontSize: 128 }} />\r\n        <Button href=\"https://bit.ly/3dfil96\" size=\"large\" type=\"primary\">\r\n          Download\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DownloadPage\r\n","function Homepage() {\r\n  // const handleOnClik = () => {\r\n  // const href = window.location.href\r\n  // console.log(window.location.assign(host))\r\n  // console.log(host)\r\n  // window.location.host = host\r\n  // }\r\n\r\n  return (\r\n    <div className=\"home-content\" id=\"home\">\r\n      <h1 className=\"neonTitle\">Raghell (Ragnarok)</h1>\r\n      <div className=\"home-action\">\r\n        {/* <Button>Register</Button> */}\r\n        <a href=\"#register\" className=\"neonBtn\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          Register\r\n        </a>\r\n        <a href=\"#download\" className=\"neonBtn\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          Download\r\n        </a>\r\n        {/* <Button>Download</Button> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import HttpRequest from './httpRequest'\r\n\r\nconst ragnarokHttprequest = new HttpRequest(\r\n  `${process.env.REACT_APP_ROHELL_API}` || 'http://localhost:3001/api'\r\n)\r\n\r\nexport default ragnarokHttprequest\r\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\r\ninterface IHeader {\r\n  key: string\r\n  value: string\r\n}\r\nclass HttpRequest {\r\n  axiosInstance: AxiosInstance\r\n  constructor(url: string) {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: url,\r\n      timeout: 120000,\r\n    })\r\n    this.axiosInstance.defaults.headers['Content-Type'] =\r\n      'application/json'\r\n\r\n    this.axiosInstance.interceptors.request.use(\r\n      (config) => {\r\n        // Do something before request is sent\r\n        return config\r\n      },\r\n      (error) => {\r\n        // Do something with request error\r\n        return error.response\r\n      },\r\n    )\r\n\r\n    // Add a response interceptor\r\n    this.axiosInstance.interceptors.response.use(\r\n      (response) => {\r\n        // Do something with response data\r\n        return response\r\n      },\r\n      (error) => {\r\n        return error.response\r\n      },\r\n    )\r\n  }\r\n\r\n  setHeader(header: IHeader) {\r\n    this.axiosInstance.defaults.headers.common[header.key] = header.value\r\n  }\r\n\r\n  get<type>(methodName: string, config?: AxiosRequestConfig) {\r\n    return this.axiosInstance.get<type>(methodName, config)\r\n  }\r\n\r\n  post<type>(methodName: string, data?: any, config?: AxiosRequestConfig) {\r\n    return this.axiosInstance.post<type>(methodName, data, config)\r\n  }\r\n\r\n  put<type>(methodName: string, data?: any, config?: AxiosRequestConfig) {\r\n    return this.axiosInstance.put<type>(methodName, data, config)\r\n  }\r\n\r\n  delete<type>(methodName: string, config?: AxiosRequestConfig) {\r\n    return this.axiosInstance.delete<type>(methodName, config)\r\n  }\r\n}\r\n\r\nexport default HttpRequest\r\n","import { Form, Input, Button, Select, DatePicker, Result } from 'antd'\r\nimport ragnarokHttprequest from 'lib/ragnnarok_api'\r\nimport { useEffect, useState } from 'react'\r\nimport { RingLoader } from 'react-spinners'\r\nimport { useGoogleReCaptcha } from 'react-google-recaptcha-v3'\r\n\r\nconst { Option } = Select\r\n\r\nfunction RegisterPage() {\r\n  const [verify, setVerify] = useState<boolean>(false)\r\n  // eslint-disable-next-line\r\n  const [token, setToken] = useState<string>('')\r\n  const [alreadyUse, setAlreadyUse] = useState<boolean>(false)\r\n  const [sucess, setSucess] = useState<boolean>(false)\r\n  const [form] = Form.useForm()\r\n  const recaptcha = useGoogleReCaptcha()\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    async function getVerify() {\r\n      if (recaptcha.executeRecaptcha) {\r\n        const token = await recaptcha.executeRecaptcha('register_page')\r\n        // console.log(token)\r\n        setVerify(true)\r\n        setLoading(false)\r\n        setToken(token)\r\n      }\r\n    }\r\n    getVerify()\r\n    // console.log('get Verify')\r\n  }, [recaptcha])\r\n  const handleOnFinish = async (values: any) => {\r\n    // console.log(values)\r\n    setLoading(true)\r\n    const res = await ragnarokHttprequest.post('/register', values)\r\n    console.log(res.status)\r\n    if (res.status === 200) {\r\n      form.resetFields()\r\n      setSucess(true)\r\n      setAlreadyUse(false)\r\n    } else if (res.status === 409) {\r\n      console.log('your id is already used')\r\n      setAlreadyUse(true)\r\n      form.validateFields()\r\n    }\r\n    setLoading(false)\r\n  }\r\n  if (loading) {\r\n    return (\r\n      <div className=\"register-content\" id=\"register\">\r\n        <h1 className=\"neonTitle\" style={{ fontSize: 46 }}>\r\n          Register\r\n        </h1>\r\n        <div\r\n          className=\"register-form\"\r\n          style={{\r\n            justifyContent: 'center',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <RingLoader size={80} color=\"#228dff\" />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  if (sucess) {\r\n    return (\r\n      <div className=\"register-content\" id=\"register\">\r\n        <h1 className=\"neonTitle\" style={{ fontSize: 46 }}>\r\n          Register\r\n        </h1>\r\n        <div className=\"register-form\">\r\n          <Result\r\n            status=\"success\"\r\n            title=\"Successfully for registation!\"\r\n            subTitle=\"Welcome to ROHELL !!\"\r\n            extra={[\r\n              <Button\r\n                onClick={() => window.location.assign('#download')}\r\n                type=\"primary\"\r\n                key=\"download\"\r\n              >\r\n                Download\r\n              </Button>,\r\n              <Button onClick={() => setSucess(false)} key=\"back\">\r\n                Back to register\r\n              </Button>,\r\n            ]}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"register-content\" id=\"register\">\r\n      <h1 className=\"neonTitle\" style={{ fontSize: 46 }}>\r\n        Register\r\n      </h1>\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        className=\"register-form\"\r\n        onFinish={handleOnFinish}\r\n      >\r\n        <Form.Item\r\n          name=\"id\"\r\n          label=\"ID\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your ID',\r\n            },\r\n            () => ({\r\n              validator: () => {\r\n                if (alreadyUse) {\r\n                  return Promise.reject(\r\n                    new Error('Your username has already used.')\r\n                  )\r\n                }\r\n                return Promise.resolve()\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            onChange={() => {\r\n              setAlreadyUse(false)\r\n            }}\r\n            placeholder=\"Please input your ID\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n            {\r\n              pattern: /^(?=.*?[A-Za-z])(?=.*?[0-9]).{8,}$/,\r\n              message:\r\n                'Minimum eight characters, at least one letter and one number',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Please input your password\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve()\r\n                }\r\n                return Promise.reject(\r\n                  new Error('The two passwords that you entered do not match!')\r\n                )\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder=\"Please input your confirm password\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Please input your email\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your birth date',\r\n            },\r\n          ]}\r\n          label=\"Birth Date\"\r\n          name=\"birthDate\"\r\n        >\r\n          <DatePicker style={{ width: '100%' }} placeholder=\"1998-01-01\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"gender\"\r\n          label=\"Gender\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please Select Gender',\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder=\"Select a option and change input text above\"\r\n            allowClear\r\n          >\r\n            <Option value=\"M\">Male</Option>\r\n            <Option value=\"F\">Female</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Button\r\n          block\r\n          disabled={!verify}\r\n          size=\"large\"\r\n          type=\"primary\"\r\n          style={{ marginTop: 16 }}\r\n          htmlType=\"submit\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import { BackTop } from 'antd'\nimport ActionList from 'components/action-list'\nimport DownloadPage from 'pages/download'\nimport Homepage from 'pages/home'\nimport RegisterPage from 'pages/register'\nimport './App.less'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Router /> */}\n      <ActionList />\n      <Homepage />\n      <RegisterPage />\n      <DownloadPage />\n      <BackTop onClick={() => window.location.assign('#home')} />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3'\n\nReactDOM.render(\n  <Router>\n    <GoogleReCaptchaProvider\n      reCaptchaKey={process.env.REACT_APP_RECAPTCHA_KEY}\n      useEnterprise={true}\n      language=\"en\"\n    >\n      <App />\n    </GoogleReCaptchaProvider>\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}